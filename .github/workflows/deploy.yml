name: Deploy to Production

# ABSOLUTELY CRITICAL for 150 users - Can't deploy manually at 3am
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          # Database
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          
          # API Keys
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
          # Sentry Configuration
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          
          # Alerting
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ALERT_EMAIL_RECIPIENTS: ${{ secrets.ALERT_EMAIL_RECIPIENTS }}
          OPENAI_BUDGET_LIMIT: ${{ secrets.OPENAI_BUDGET_LIMIT }}
          
          # Environment
          NODE_ENV: production

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        run: |
          # Install Railway CLI
          npm install -g @railway/cli
          
          # Deploy to production
          railway deploy --service jobping
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Health Check
        if: success()
        run: |
          echo "üîç Performing post-deployment health check..."
          sleep 30  # Wait for deployment to stabilize
          
          # Basic health check (adjust URL as needed)
          if curl -f -s https://jobping.ai/api/health > /dev/null; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ö†Ô∏è Health check failed - service may still be starting"
          fi

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Deployment successful to production"
          # Send Slack notification if webhook is configured
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"‚úÖ JobPing deployment successful to production"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed"
          # Send Slack notification if webhook is configured
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"üö® JobPing deployment FAILED - manual intervention required"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
